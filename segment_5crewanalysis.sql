-- Question1
-- Identify the columns in the names table that have null values.
use imdb;

SELECT DISTINCT(NULL_COLUMNS)
FROM
(SELECT 
CASE
     WHEN id IS NULL THEN 'ID' 
	 WHEN name IS NULL THEN 'name' 
     WHEN height IS NULL THEN 'height' 
     WHEN date_of_birth IS NULL THEN 'date_of_birth' 
     WHEN known_for_movies IS NULL THEN 'known_for_movies' 
END AS NULL_COLUMNS
FROM names) AS X
WHERE X.NULL_COLUMNS IS NOT NULL;

-- Question 2
-- Determine the top three directors in the top three genres 
-- with movies having an average rating > 8.
-- GENRE,DIRECTOR_NAME
SELECT * FROM
(SELECT  GENRE.genre,NAMES.NAME AS DIRECTOR_NAME, RATINGS.AVG_RATING,
ROW_NUMBER() OVER(PARTITION BY GENRE.GENRE ORDER BY RATINGS.AVG_RATING DESC) AS TOP_RANK
FROM DIRECTOR_MAPPING
INNER JOIN NAMES ON DIRECTOR_MAPPING.NAME_ID = NAMES.ID
INNER JOIN GENRE ON DIRECTOR_MAPPING.MOVIE_ID = GENRE.MOVIE_ID
INNER JOIN RATINGS ON DIRECTOR_MAPPING.MOVIE_ID = RATINGS.MOVIE_ID
WHERE DIRECTOR_MAPPING.MOVIE_ID IN
(SELECT ID
FROM MOVIE
INNER JOIN RATINGS ON RATINGS.MOVIE_ID = MOVIE.ID
WHERE RATINGS.AVG_RATING > 8)
ORDER BY GENRE.GENRE) AS ANSWER
WHERE TOP_RANK < 4;

-- Question 3
-- Find the top two actors whose movies have a median rating >= 8.
SELECT * FROM
(SELECT  NAMES.NAME AS ACTOR_NAME, RATINGS.MEDIAN_RATING,
ROW_NUMBER() OVER(ORDER BY RATINGS.MEDIAN_RATING DESC) AS TOP_RANK
FROM ROLE_MAPPING
INNER JOIN NAMES ON ROLE_MAPPING.NAME_ID = NAMES.ID
INNER JOIN RATINGS ON ROLE_MAPPING.MOVIE_ID = RATINGS.MOVIE_ID
WHERE ROLE_MAPPING.MOVIE_ID IN
(SELECT ID
FROM MOVIE
INNER JOIN RATINGS ON RATINGS.MOVIE_ID = MOVIE.ID
WHERE RATINGS.MEDIAN_RATING >= 8) AND ROLE_MAPPING.CATEGORY = "ACTOR"
ORDER BY TOP_RANK, ACTOR_NAME) AS ANSWER
WHERE TOP_RANK <= 2;

-- Question 4  
-- Identify the top three production houses based on the number 
-- of votes received by their movies.
SELECT * FROM
(SELECT MOVIE.PRODUCTION_COMPANY, sum(RATINGS.TOTAL_VOTES), 
ROW_NUMBER() OVER(ORDER BY sum(RATINGS.TOTAL_VOTES) DESC) AS TOP_RANK
FROM MOVIE
INNER JOIN RATINGS ON RATINGS.MOVIE_ID = MOVIE.ID
group by 1) AS ANSWER
WHERE TOP_RANK < 4;

SELECT MOVIE.PRODUCTION_COMPANY, RATINGS.TOTAL_VOTES, 
DENSE_RANK() OVER(ORDER BY RATINGS.TOTAL_VOTES DESC,PRODUCTION_COMPANY) AS TOP_RANK
FROM MOVIE
INNER JOIN RATINGS ON RATINGS.MOVIE_ID = MOVIE.ID;

SELECT * FROM TOTAL_VOTES WHERE MOVIE_ID;

SELECT * FROM ROLE_MAPPING;

-- Question 5
-- Rank actors based on their average ratings in Indian movies released in India.
SELECT  
DENSE_RANK() OVER(ORDER BY RATINGS.AVG_RATING DESC) AS TOP_RANK,
NAMES.NAME AS ACTOR_NAME, RATINGS.AVG_RATING
FROM ROLE_MAPPING
INNER JOIN NAMES ON ROLE_MAPPING.NAME_ID = NAMES.ID
INNER JOIN RATINGS ON ROLE_MAPPING.MOVIE_ID = RATINGS.MOVIE_ID
INNER JOIN MOVIE ON ROLE_MAPPING.MOVIE_ID = MOVIE.ID
WHERE ROLE_MAPPING.CATEGORY = "ACTOR" and COUNTRY = "INDIA" AND LANGUAGES = "HINDI"
ORDER BY TOP_RANK;

-- Question 6
-- Identify the top five actresses in Hindi movies released in 
-- India based on their average ratings.
select * from role_mapping;

SELECT * FROM
(SELECT  
ROW_NUMBER() OVER(ORDER BY RATINGS.AVG_RATING DESC) AS TOP_RANK,
NAMES.NAME AS ACTOR_NAME, RATINGS.AVG_RATING
FROM ROLE_MAPPING
INNER JOIN NAMES ON ROLE_MAPPING.NAME_ID = NAMES.ID
INNER JOIN RATINGS ON ROLE_MAPPING.MOVIE_ID = RATINGS.MOVIE_ID
INNER JOIN MOVIE ON ROLE_MAPPING.MOVIE_ID = MOVIE.ID
WHERE ROLE_MAPPING.CATEGORY = "ACTRESS" and COUNTRY = "INDIA" AND LANGUAGES = "HINDI"
ORDER BY TOP_RANK) AS ANSWER
WHERE TOP_RANK <= 5;